name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-linux:
    name: Build Linux Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Add Rust target
        run: rustup target add x86_64-unknown-linux-gnu

      - name: Build
        run: cargo build --release --target x86_64-unknown-linux-gnu

      - name: Package
        shell: bash
        run: |
          BIN_NAME="scylla"
          VERSION="${GITHUB_REF_NAME}"
          OUT_DIR="release"

          mkdir -p $OUT_DIR
          cp target/x86_64-unknown-linux-gnu/release/${BIN_NAME} $OUT_DIR/
          tar -czf $OUT_DIR/${BIN_NAME}-${VERSION}-x86_64-unknown-linux-gnu.tar.gz -C $OUT_DIR ${BIN_NAME}
          rm $OUT_DIR/${BIN_NAME}

      - name: Generate Checksums
        shell: bash
        run: |
          cd release
          sha256sum * > checksums.txt

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    name: Build Windows Release
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Add Rust target
        run: rustup target add x86_64-pc-windows-msvc

      - name: Build
        run: cargo build --release --target x86_64-pc-windows-msvc

      - name: Package
        shell: pwsh
        run: |
          $BIN_NAME="scylla"
          $VERSION="${env:GITHUB_REF_NAME}"
          $OUT_DIR="release"

          New-Item -ItemType Directory -Force -Path $OUT_DIR

          Copy-Item "target\x86_64-pc-windows-msvc\release\$BIN_NAME.exe" "$OUT_DIR\"
          Compress-Archive -Path "$OUT_DIR\$BIN_NAME.exe" -DestinationPath "$OUT_DIR\$BIN_NAME-$VERSION-x86_64-pc-windows-msvc.zip"
          Remove-Item "$OUT_DIR\$BIN_NAME.exe"

      - name: Generate Checksums
        shell: pwsh
        run: |
          Set-Location release
          Get-ChildItem | Get-FileHash -Algorithm SHA256 | ForEach-Object { "$($_.Hash) $($_.Name)" } | Out-File checksums.txt

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
