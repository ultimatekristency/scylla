name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Add Linux target
        run: rustup target add x86_64-unknown-linux-gnu

      - name: Build
        run: cargo build --release --target x86_64-unknown-linux-gnu

      - name: Package
        shell: bash
        run: |
          BIN_NAME="scylla"
          VERSION="${GITHUB_REF_NAME}"
          OUT_DIR="release"
          mkdir -p $OUT_DIR
          cp target/x86_64-unknown-linux-gnu/release/${BIN_NAME} $OUT_DIR/
          tar -czf $OUT_DIR/${BIN_NAME}-${VERSION}-x86_64-unknown-linux-gnu.tar.gz -C $OUT_DIR ${BIN_NAME}
          rm $OUT_DIR/${BIN_NAME}

      - name: Generate Checksums
        shell: bash
        run: |
          cd release
          sha256sum * > checksums.txt

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Add Windows target
        run: rustup target add x86_64-pc-windows-msvc

      - name: Build
        run: cargo build --release --target x86_64-pc-windows-msvc

      - name: Package
        shell: pwsh
        run: |
          $BinName = "scylla"
          $Version = "${env:GITHUB_REF_NAME}"
          $OutDir = "release"
          New-Item -ItemType Directory -Path $OutDir -Force | Out-Null

          # Copy binary to release folder
          Copy-Item "target/x86_64-pc-windows-msvc/release/$BinName.exe" $OutDir/

          # Zip binary
          Compress-Archive -Path "$OutDir\$BinName.exe" -DestinationPath "$OutDir\$BinName-$Version-x86_64-pc-windows-msvc.zip" -Force

          # Remove copied binary
          Remove-Item "$OutDir\$BinName.exe"

      - name: Generate Checksums
        shell: pwsh
        run: |
          Set-Location release
          $ChecksumFile = "checksums.txt"

          # Wait to ensure no files are locked
          Start-Sleep -Seconds 1

          # Compute SHA256 for all files except the checksum file itself
          Get-ChildItem * | Where-Object { $_.Name -ne $ChecksumFile } |
            Get-FileHash -Algorithm SHA256 |
            ForEach-Object { "$($_.Hash) $($_.Name)" } |
            Set-Content -Path $ChecksumFile

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
